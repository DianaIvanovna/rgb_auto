import React from "react";

const prefix = "img";

const files = {
    byId: {
        checked: {
            width: 13,
            height: 11,
            viewBox: [0, 0, 13, 11],
            data: '<path d="M11.39 0.442019C10.9995 0.0514722 10.3663 0.0514607 9.97579 0.441994L5.80403 4.61376C5.41351 5.00428 4.78034 5.00428 4.38982 4.61376L3.35884 3.58278C2.96832 3.19225 2.33515 3.19225 1.94463 3.58278L0.707107 4.8203C0.316583 5.21082 0.316583 5.84399 0.707107 6.23451L2.44519 7.9726L4.38982 9.91709C4.78034 10.3076 5.41349 10.3076 5.80401 9.91706L12.6274 3.09368C13.0179 2.70316 13.0179 2.07002 12.6274 1.67949L11.39 0.442019Z" fill="#00A651"/>',
        },
        "bi-clock": {
            width: 23,
            height: 23,
            viewBox: [0, 0, 23, 23],
            data: '<path xmlns="http://www.w3.org/2000/svg" fill="black" d="M11.5 5.03125C11.5 4.84063 11.4243 4.65781 11.2895 4.52302C11.1547 4.38823 10.9719 4.3125 10.7812 4.3125C10.5906 4.3125 10.4078 4.38823 10.273 4.52302C10.1382 4.65781 10.0625 4.84063 10.0625 5.03125V12.9375C10.0625 13.0642 10.0961 13.1886 10.1597 13.2982C10.2233 13.4077 10.3147 13.4985 10.4247 13.5614L15.456 16.4364C15.6211 16.5256 15.8146 16.5467 15.995 16.4952C16.1755 16.4437 16.3287 16.3236 16.4218 16.1607C16.5149 15.9977 16.5406 15.8048 16.4933 15.6232C16.4461 15.4415 16.3297 15.2856 16.169 15.1886L11.5 12.5206V5.03125Z"/><path xmlns="http://www.w3.org/2000/svg" fill="#10347B" d="M11.5 23C14.55 23 17.4751 21.7884 19.6317 19.6317C21.7884 17.4751 23 14.55 23 11.5C23 8.45001 21.7884 5.52494 19.6317 3.36827C17.4751 1.2116 14.55 0 11.5 0C8.45001 0 5.52494 1.2116 3.36827 3.36827C1.2116 5.52494 0 8.45001 0 11.5C0 14.55 1.2116 17.4751 3.36827 19.6317C5.52494 21.7884 8.45001 23 11.5 23ZM21.5625 11.5C21.5625 14.1687 20.5023 16.7282 18.6153 18.6153C16.7282 20.5023 14.1687 21.5625 11.5 21.5625C8.83126 21.5625 6.27182 20.5023 4.38474 18.6153C2.49765 16.7282 1.4375 14.1687 1.4375 11.5C1.4375 8.83126 2.49765 6.27182 4.38474 4.38474C6.27182 2.49765 8.83126 1.4375 11.5 1.4375C14.1687 1.4375 16.7282 2.49765 18.6153 4.38474C20.5023 6.27182 21.5625 8.83126 21.5625 11.5Z"/>',
        },
        "bi-phone-vibrate": {
            width: 33,
            height: 33,
            viewBox: [0, 0, 33, 33],
            data: '<g xmlns="http://www.w3.org/2000/svg" clip-path="url(#clip0)"><path fill="#10347B" d="M20.625 6.1875C21.172 6.1875 21.6966 6.4048 22.0834 6.79159C22.4702 7.17839 22.6875 7.70299 22.6875 8.25V24.75C22.6875 25.297 22.4702 25.8216 22.0834 26.2084C21.6966 26.5952 21.172 26.8125 20.625 26.8125H12.375C11.828 26.8125 11.3034 26.5952 10.9166 26.2084C10.5298 25.8216 10.3125 25.297 10.3125 24.75V8.25C10.3125 7.70299 10.5298 7.17839 10.9166 6.79159C11.3034 6.4048 11.828 6.1875 12.375 6.1875H20.625ZM12.375 4.125C11.281 4.125 10.2318 4.5596 9.45818 5.33318C8.6846 6.10677 8.25 7.15598 8.25 8.25V24.75C8.25 25.844 8.6846 26.8932 9.45818 27.6668C10.2318 28.4404 11.281 28.875 12.375 28.875H20.625C21.719 28.875 22.7682 28.4404 23.5418 27.6668C24.3154 26.8932 24.75 25.844 24.75 24.75V8.25C24.75 7.15598 24.3154 6.10677 23.5418 5.33318C22.7682 4.5596 21.719 4.125 20.625 4.125H12.375Z"/><path fill="black" d="M16.5 24.7501C17.047 24.7501 17.5716 24.5328 17.9584 24.146C18.3452 23.7592 18.5625 23.2346 18.5625 22.6876C18.5625 22.1406 18.3452 21.616 17.9584 21.2292C17.5716 20.8424 17.047 20.6251 16.5 20.6251C15.953 20.6251 15.4284 20.8424 15.0416 21.2292C14.6548 21.616 14.4375 22.1406 14.4375 22.6876C14.4375 23.2346 14.6548 23.7592 15.0416 24.146C15.4284 24.5328 15.953 24.7501 16.5 24.7501ZM3.29795 8.36972C3.41769 8.43307 3.52378 8.5194 3.61015 8.62376C3.69651 8.72813 3.76147 8.84848 3.80131 8.97796C3.84115 9.10744 3.85509 9.2435 3.84233 9.37836C3.82957 9.51323 3.79037 9.64426 3.72695 9.76397C2.63021 11.8397 2.05874 14.1525 2.06252 16.5001C2.06252 18.9338 2.66477 21.2273 3.72695 23.2362C3.85495 23.478 3.88167 23.7607 3.80121 24.0222C3.72076 24.2837 3.53973 24.5025 3.29795 24.6305C3.05618 24.7585 2.77345 24.7852 2.51198 24.7047C2.25051 24.6243 2.0317 24.4432 1.9037 24.2015C0.649753 21.8283 -0.00385182 19.1842 1.70763e-05 16.5001C1.70763e-05 13.7219 0.688892 11.0984 1.9037 8.79871C1.96706 8.67898 2.05339 8.57289 2.15775 8.48652C2.26211 8.40016 2.38247 8.3352 2.51195 8.29536C2.64143 8.25552 2.77748 8.24158 2.91235 8.25434C3.04722 8.2671 3.17825 8.3063 3.29795 8.36972ZM29.7021 8.36972C29.8218 8.3063 29.9528 8.2671 30.0877 8.25434C30.2225 8.24158 30.3586 8.25552 30.4881 8.29536C30.6176 8.3352 30.7379 8.40016 30.8423 8.48652C30.9467 8.57289 31.033 8.67898 31.0963 8.79871C32.3504 11.1718 33.004 13.816 33 16.5001C33.004 19.1842 32.3504 21.8283 31.0963 24.2015C30.9683 24.4432 30.7495 24.6243 30.4881 24.7047C30.2266 24.7852 29.9439 24.7585 29.7021 24.6305C29.4603 24.5025 29.2793 24.2837 29.1988 24.0222C29.1184 23.7607 29.1451 23.478 29.2731 23.2362C30.3698 21.1605 30.9413 18.8477 30.9375 16.5001C30.9375 14.0663 30.3353 11.7728 29.2731 9.76397C29.2097 9.64426 29.1705 9.51323 29.1577 9.37836C29.1449 9.2435 29.1589 9.10744 29.1987 8.97796C29.2386 8.84848 29.3035 8.72813 29.3899 8.62376C29.4763 8.5194 29.5823 8.43307 29.7021 8.36972ZM6.30508 11.414C6.43134 11.4632 6.54667 11.5368 6.64445 11.6307C6.74224 11.7245 6.82057 11.8367 6.87497 11.9608C6.92937 12.0849 6.95877 12.2186 6.96149 12.3541C6.96422 12.4896 6.9402 12.6243 6.89083 12.7505C6.42458 13.9455 6.18603 15.2173 6.18752 16.5001C6.18752 17.8242 6.43502 19.0885 6.88877 20.2497C6.94632 20.3772 6.97735 20.515 6.97996 20.6549C6.98256 20.7947 6.9567 20.9336 6.90395 21.0631C6.85119 21.1926 6.77263 21.3101 6.67306 21.4083C6.57349 21.5065 6.45499 21.5834 6.32475 21.6344C6.19451 21.6854 6.05527 21.7093 5.91548 21.7048C5.7757 21.7003 5.6383 21.6674 5.51164 21.6081C5.38497 21.5488 5.2717 21.4643 5.17869 21.3599C5.08569 21.2554 5.0149 21.1331 4.97064 21.0005C4.4106 19.5662 4.1238 18.0398 4.12502 16.5001C4.12502 14.914 4.42408 13.396 4.97064 11.9997C5.07009 11.7452 5.26647 11.5406 5.51667 11.4308C5.76687 11.3209 6.05043 11.3149 6.30508 11.414ZM26.695 11.414C26.8212 11.3646 26.9559 11.3406 27.0914 11.3433C27.2269 11.346 27.3605 11.3754 27.4846 11.4298C27.6087 11.4842 27.7209 11.5626 27.8148 11.6603C27.9086 11.7581 27.9822 11.8735 28.0315 11.9997C28.576 13.396 28.875 14.914 28.875 16.5001C28.875 18.0862 28.576 19.6042 28.0294 21.0005C27.9206 21.2414 27.7234 21.4314 27.4785 21.5311C27.2337 21.6309 26.9599 21.6328 26.7136 21.5364C26.4674 21.44 26.2676 21.2528 26.1555 21.0133C26.0434 20.7739 26.0276 20.5005 26.1113 20.2497C26.565 19.0885 26.8125 17.8242 26.8125 16.5001C26.8125 15.176 26.565 13.9117 26.1113 12.7505C26.0114 12.4958 26.0169 12.212 26.1263 11.9613C26.2358 11.7107 26.4403 11.5138 26.695 11.414Z"/></g><defs xmlns="http://www.w3.org/2000/svg"><clipPath id="clip0"><path fill="white" d="M0 0H33V33H0z"/></clipPath></defs>',
        },
        "carbon-mail-all": {
            width: 32,
            height: 32,
            viewBox: [0, 0, 32, 32],
            data: '<path xmlns="http://www.w3.org/2000/svg" fill="black" d="M16.5901 20.41L20.1701 24L16.5801 27.59L18.0001 29L23.0001 24L18.0001 19L16.5901 20.41Z"/><path xmlns="http://www.w3.org/2000/svg" fill="black" d="M23.5901 20.41L27.1701 24L23.5801 27.59L25.0001 29L30.0001 24L25.0001 19L23.5901 20.41Z"/><path xmlns="http://www.w3.org/2000/svg" fill="#10347B" d="M14 23H4V7.91L15.43 15.82C15.5974 15.9361 15.7963 15.9984 16 15.9984C16.2037 15.9984 16.4026 15.9361 16.57 15.82L28 7.91V17H30V7C30 6.46957 29.7893 5.96086 29.4142 5.58579C29.0391 5.21071 28.5304 5 28 5H4C3.46957 5 2.96086 5.21071 2.58579 5.58579C2.21071 5.96086 2 6.46957 2 7V23C2 23.5304 2.21071 24.0391 2.58579 24.4142C2.96086 24.7893 3.46957 25 4 25H14V23ZM25.8 7L16 13.78L6.2 7H25.8Z"/>',
        },
    },
    allIds: ["checked", "bi-clock", "bi-phone-vibrate", "carbon-mail-all"],
};

function SVG(props) {
    if (props.isHidden) {
        return <svg display="none">{props.children}</svg>;
    }

    const file = files.byId[props.id];

    if (!file) {
        return null;
    }

    const width = props.width || file.width || null;
    const height = props.height || file.height || null;
    const viewBox = file.viewBox ? file.viewBox.join(" ") : `0 0 ${props.width} ${props.height}`;

    return props.isHidden ? (
        <svg display="none">{props.children}</svg>
    ) : (
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveAspectRatio="xMinYMin" width={width} height={height} viewBox={viewBox} className={`${props.className ? props.className : ""}`}>
            <use xlinkHref={`#${prefix}-${props.id}`} />
        </svg>
    );
}

function SVGSource(props) {
    return (
        <SVG isHidden={true}>
            <defs>
                {files.allIds.reduce((defs, fileId, fileIndex) => {
                    const file = files.byId[fileId];

                    return defs.concat(<g key={fileIndex} id={`${prefix}-${fileId}`} dangerouslySetInnerHTML={{__html: file.data}}></g>);
                }, [])}
            </defs>
        </SVG>
    );
}

export {SVG, SVGSource};
